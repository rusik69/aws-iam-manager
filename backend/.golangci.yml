run:
  timeout: 5m
  issues-exit-code: 1
  tests: true
  modules-download-mode: readonly

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true

linters:
  enable:
    - bodyclose
    - dupl
    - errcheck
    - exportloopref
    - funlen
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    - gomnd
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - lll
    - misspell
    - nakedret
    - noctx
    - nolintlint
    - rowserrcheck
    - staticcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - whitespace
    - revive

linters-settings:
  govet:
    check-shadowing: true
  gocyclo:
    min-complexity: 15
  dupl:
    threshold: 150
  goconst:
    min-len: 3
    min-occurrences: 3
  misspell:
    locale: US
  lll:
    line-length: 120
  goimports:
    local-prefixes: aws-iam-manager
  gocritic:
    enabled-tags:
      - diagnostic
      - performance
      - style
    disabled-checks:
      - dupImport
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
      - unnecessaryBlock
      - httpNoBody
      - dupBranchBody
  funlen:
    lines: 100
    statements: 50
  gomnd:
    settings:
      mnd:
        ignored-numbers: 3600,8080
  revive:
    rules:
      - name: exported
        disabled: true

issues:
  exclude-rules:
    - path: _test\.go
      linters:
        - gomnd
        - funlen
        - goconst
        - noctx
    - path: cmd/
      linters:
        - gochecknoinits
    - linters:
        - lll
      source: "^//go:generate "
  exclude-use-default: false
  exclude:
    # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*printf?|os\.(Un)?Setenv). is not checked
    # govet: Common false positives
    - (possible misuse of unsafe.Pointer|should have signature)
    # staticcheck: Developers tend to write in C-style with an explicit 'break' in a 'switch', so it's ok to ignore
    - ineffective break statement. Did you mean to break out of the outer loop
    # gosec: Too many false-positives on 'unsafe' usage
    - (subprocess launched with variable|Potential file inclusion via variable)
    # gosec: Too many false-positives for parametrized shell calls
    - Subprocess launch(ed with variable|ing should be audited)
    # gosec: Duplicated errcheck checks
    - G104
    # gocritic: Too many false-positives in regular conditions
    - (elseif|assignOp|singleCaseSwitch)
    # gocritic: False positive is triggered by 'src, err := ioutil.ReadFile(filename)'
    - unlambda
    # gocritic: False positive for switching on string
    - sloppyReassign
    # govet: Common false positives
    - (possible misuse of unsafe.Pointer|should have signature)
  max-issues-per-linter: 50
  max-same-issues: 3

severity:
  default-severity: error