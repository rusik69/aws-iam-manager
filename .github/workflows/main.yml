name: Main Workflow

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Job 1: CI Tests and Quality Checks
  ci:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache-dependency-path: backend/go.sum
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: npm
        cache-dependency-path: frontend/package-lock.json
    
    - name: Backend CI
      working-directory: backend
      run: make ci
    
    - name: Frontend CI
      working-directory: frontend
      run: make ci
    
    - name: Lint backend
      if: github.ref == 'refs/heads/main'
      working-directory: backend
      run: make lint

    - name: Security scan
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: fs
        format: sarif
        output: trivy-results.sarif
        
    - name: Upload security results
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: trivy-results.sarif

  # Job 2: Docker Build and Push (depends on CI)
  docker:
    needs: ci
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    permissions:
      contents: read
      packages: write
      
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha

  # Job 3: Release Binaries (depends on Docker, runs on releases only)
  release:
    needs: docker
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: npm
        cache-dependency-path: frontend/package-lock.json
    
    - name: Build frontend for release
      working-directory: frontend
      run: make build
    
    - name: Build release binaries
      working-directory: backend
      run: make release
    
    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          backend/bin/aws-iam-manager-*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}